<UserControl x:Class="MusicApp.Control.VolumeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicApp.Control" 
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="200" d:DesignWidth="200">
    <!--调节程序音量按钮,点击按钮弹出调节音量进度条-->
    <UserControl.Resources>
        <!--声音进度条-->
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Border Background="{TemplateBinding Background}" CornerRadius="50" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
            <Border x:Name="border">
            <Track x:Name="PART_Track" Grid.Column="1">
                <Track.DecreaseRepeatButton>
                        <RepeatButton x:Name="RepeatButton1" Command="{x:Static Slider.DecreaseLarge}" Width="5" Background="{DynamicResource MainLineBackColor}" Style="{StaticResource RepeatButtonTransparent}"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                        <RepeatButton  x:Name="RepeatButton2" Command="{x:Static Slider.IncreaseLarge}" Width="5" Background="{DynamicResource BottomMainButBackColor}" Style="{StaticResource RepeatButtonTransparent}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="0" Width="0" OverridesDefaultStyle="True" Background="{DynamicResource MainLineBackColor}" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top"/>
                </Track.Thumb>
            </Track>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Width" TargetName="Thumb" Value="10"/>
                    <Setter Property="Height" TargetName="Thumb" Value="10"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="VolumeSliderStyle" TargetType="{x:Type Slider}">
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Popup x:Name="VolumePopupContrainer" 
               IsOpen="{Binding Model.IsOpen}"
               StaysOpen="False" 
               Placement="Top" 
               Width="50" 
               Height="170" 
               HorizontalOffset="-10" 
               VerticalOffset="30"
               AllowsTransparency="True"
               PlacementTarget="{Binding ElementName=VolumeBut}">
            <StackPanel 
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Top">
                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="MouseLeave">
                        <behaviors:InvokeCommandAction Command="{Binding VolumeMouseLeaveCommand}" />
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
                <Border Background="{DynamicResource BottomVolumeBackColor}" Height="120" Width="30" CornerRadius="2" Margin="10 10 10 0">
                    <Border.Effect>
                        <DropShadowEffect Color="#1e1e1e00" ShadowDepth="0" BlurRadius="10" Opacity="0.1" Direction="0"/>
                    </Border.Effect>
                    <Slider Style="{DynamicResource VolumeSliderStyle}"
                        x:Name="VolumeProgress"
                        Value="{Binding Model.VolumeValue}"
                        Minimum="0" 
                        Maximum="1"
                        Width="30" 
                        Margin="0 10 0 10"
                        IsMoveToPointEnabled="True"
                        Height="100"
                        Cursor="Hand" Orientation="Vertical">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="ValueChanged">
                                <behaviors:InvokeCommandAction Command="{Binding VolumeValueChangedCommand}" 
                                                               CommandParameter="{Binding ElementName=VolumeProgress,Path=Value}" />
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </Slider>
                </Border>
                <Path HorizontalAlignment="Center" 
                    VerticalAlignment="Center" 
                    Data="M 0 -0.01 L 6 4 L 12 -0.01 Z"
                    Fill="{DynamicResource BottomVolumeBackColor}"/>
                <Border x:Name="VolumeBorder" 
                        Background="{DynamicResource BottomBackColor}" 
                        Height="30" Opacity="0.01" 
                        Cursor="Hand">
                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="MouseDown">
                            <behaviors:InvokeCommandAction Command="{Binding VolumeButMouseDownCommand}" />
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>
                </Border>
            </StackPanel>
        </Popup>
        <Button x:Name="VolumeBut" 
                Content="{Binding Model.VolumeButContent}" 
                Style="{DynamicResource DefaultButtonStyle}"
                Foreground="{DynamicResource BottomButTextColor}" 
                FontSize="20" Width="30" Height="30">
            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="MouseEnter">
                    <behaviors:InvokeCommandAction Command="{Binding VolumeButMouseEnterCommand}" />
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
        </Button>
    </Grid>
</UserControl>
