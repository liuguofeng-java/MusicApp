<UserControl x:Class="MusicApp.Control.SongPlayListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicApp.Control" xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="420">
    <!--歌曲播放列表,主窗体右下方-->
    <UserControl.Resources>
        <!--列表-->
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"  Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 TextBlock.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MainPopupBackColor}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PlayListBoxBackColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource PlayListBoxOverBackColor}"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding IsSelected, Mode=Twoway}" Value="true">
                                <Setter Property="TextBlock.Foreground" TargetName="content" Value="{DynamicResource PlayListIsSelectdColor}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="420"/>
        </Grid.ColumnDefinitions>
        <Border Background="{DynamicResource MainPopupBackColor}" 
                Margin="0 60 0 75"
                Grid.Column="1" 
                Visibility="{Binding Model.PlayListVisibility}">
            <Border.Effect>
                <DropShadowEffect Color="#1e1e1e00" ShadowDepth="0" BlurRadius="10" Opacity="0.1" Direction="0"/>
            </Border.Effect>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="70"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="22"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="当前播放" Margin="20" FontSize="20" FontWeight="Bold" Foreground="{DynamicResource PlayListTextColor}" Grid.Row="0"/>
                <StackPanel Orientation="Horizontal" Grid.Row="1">
                    <TextBlock x:Name="SongCount" 
                               Text="{Binding Model.SongPlayCount}"                               
                               Margin="20 0 0 0" 
                               Foreground="{DynamicResource PlayListAuxTextColor}"/>
                    <TextBlock Text="&#xe6a9; 全部收藏" 
                               Cursor="Hand"
                               VerticalAlignment="Center"
                               Margin="170 0 0 0" 
                               FontSize="14" 
                               Foreground="{DynamicResource PlayListTextColor}" 
                               FontFamily="{DynamicResource Iconfont}"/>
                    <TextBlock x:Name="CloseList"
                               Text="清空列表"
                               Cursor="Hand"
                               VerticalAlignment="Center"
                               Margin="20 0 0 0" 
                               FontSize="14" 
                               Foreground="#507daf">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="MouseDoubleClick">
                                <behaviors:InvokeCommandAction Command="{Binding ClosePlayListCommand}"/>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </TextBlock>
                </StackPanel>
                <Border Background="{DynamicResource PlayListAuxTextColor}" Height="1.2" Margin="20 10 20 5" Grid.Row="2" />
                <!--列表-->
                <ScrollViewer Template="{StaticResource MyScrollViewer}" VerticalScrollBarVisibility="Auto" Grid.Row="3">
                    <ListBox x:Name="PlayListBox" Background="Transparent" BorderThickness="0" AlternationCount="2" ItemsSource="{Binding Model.SongLists}">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="MouseDoubleClick">
                                <behaviors:InvokeCommandAction Command="{Binding PlayListMouseDoubleClickCommand}" CommandParameter="{Binding ElementName=PlayListBox,Path=SelectedIndex}"/>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Margin="20 10 0 10">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock x:Name="SongNameText" Text="{Binding SongName}"  
                                            FontSize="12" 
                                            Width="180"
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                                        <TextBlock x:Name="AuthorText" Text="{Binding Author}"  
                                            FontSize="12" 
                                            Width="120"
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                                        <TextBlock x:Name="FormatSongTimeText" Text="{Binding FormatSongTime}"  
                                            FontSize="12" 
                                            Foreground="{DynamicResource PlayListTimeTextColor}"
                                            Width="50"
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, Mode=Twoway}" Value="false">
                                        <Setter Property="Foreground" TargetName="SongNameText" Value="{DynamicResource PlayListTextColor}"/>
                                        <Setter Property="Foreground" TargetName="AuthorText" Value="{DynamicResource PlayListBoxAuthorTextColor}"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </ScrollViewer>
            </Grid>

            

        </Border>


    </Grid>
</UserControl>
